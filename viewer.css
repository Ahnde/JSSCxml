@-webkit-keyframes exit{
	from{
		outline: 0 solid rgba(255,0,0,0.5);
	}
	to{
		outline: 3pt solid rgba(255,0,0,0.5);
	}
}
@-webkit-keyframes enter{
	from{
		outline: 0 solid rgba(0,255,0,0.7);
	}
	to{
		outline: 3pt solid rgba(0,255,0,0.7);
	}
}
@-webkit-keyframes burn{
	from{
		line-height: 11pt;
		text-shadow: 0px 0px 1px #8ee9ff;
	}
	15%{
		color: rgba(255,238,76,1);
		text-shadow: 0px 0px 3px #ffb33f;
	}
	50%{
		color: rgba(0,0,0,0);
		text-shadow: 0px 0px 8px rgba(177,51,0,0.64);
	}
	85%{
		line-height: 2pt;
		color: rgba(0,0,0,0);
		opacity: 1.0;
		text-shadow: 0px -7px 20px rgba(0,0,0,0.42);
	}
	to{
		line-height: 0;
		color: rgba(0,0,0,0);
		opacity: 0;
		text-shadow: 0px -10px 25px rgba(0,0,0,0.42);
	}
}

/* general UI */
body{
	font-family: sans-serif;
}

div.scxml{
	min-height: 12em;
	min-width: 30em;
}
td{
	vertical-align: top;
	border: 1px solid grey;
	width: 8em;
}
td input, td textarea{ width: 8em; }
td+td+td{ width: auto; }
td h3{
	margin: 0;
	font-weight: normal;
}
table{
	width: 100%;
	border-collapse: collapse;
}
textarea{
	font-family: monospace;
	min-height: 20em;
}
header h2{
	display: inline;
}
input{
	font-size: 12pt;
	font-weight: normal;
}

/* SCXML element rendering */
state{
	background-color: white;
	float: left;
	border: 1px solid grey;
	padding: 4pt;
	margin: 6pt;
	box-shadow: 0px 1pt 3pt grey;
	min-width: 3em;
	width: auto;
	-webkit-transition: background-color 0.7s ease-out 0;
	outline: 0 solid white;
}
invoke{
	color: #ce45d0;
	display: block;
}
transition{
	clear: left;
	opacity: 0.5;
	display: block;
	border-bottom: 2px solid #0f3a98;
}
transition h4{
	text-decoration: line-through;
	display: inline;
	font-weight: normal;
}
transition[event] h4{
	text-decoration: none;
}
transition code{
	margin-left: 1em;
	font-size: 8pt;
}
transition code:before{
	content: "if ";
	color: #7d0000;
}
state.final{ border-color: red; }
state.parallel{
	border: 3px double grey;
	padding: 2pt;
}
state h4{
	font-size: 10pt;
	margin: 0;
}
state.active{
	background-color: #ffff69;
	-webkit-animation: enter 0.3s linear 0 3 alternate;
}
state.active > transition{
	opacity: 1;
}
state.exited{
	-webkit-animation: exit 0.3s linear 0 3 alternate;
}

/* events */
li.error{
	color: red;
}
li.burn{
	-webkit-animation: burn 1.3s linear;
	display: block; 
}

/* transition arrows */
svg{
	position: absolute;
	pointer-events: none;
}
marker{ fill: #0f3a98; }
path{
	fill: none;
	stroke: #0f3a98;
	stroke-width: 2;
	pointer-events: visible;
}